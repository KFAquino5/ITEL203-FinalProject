%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 48 48
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
24 0 m
37.254833 0 48 10.745166 48 24 c
48 37.254833 37.254833 48 24 48 c
10.745166 48 0 37.254833 0 24 c
0 10.745166 10.745166 0 24 0 c
h
W
0 0 48 48 rc
-5 53 m
53 53 l
53 -5 l
-5 -5 l
h
f
Q
q
0 0 48 48 rc
30 0 0 27 9 9 cm
BI
/Width 90
/Height 81
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$oDaCAJcG?AMuP""p&FU*s6$-Vhgtg\AcCA!rn1ubfk19AK)b&1s74D6rq;f\oDb]f=SLbRmBuuS
OoO3Xs41BPdRO2^3W78YrQm1qdP:^K1&]NTrR*G!dQ[ZpVuGnRrR*e+dP:^K1&]NTrR*G!cnG@D1&]EZ
rR+7:f3A:1FT:Eds6dGtq;es`oDcc/J,]6Co$%-tV#TA*s4M&`e56+j5Q/nbrQd1rd4kOI1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K3r\<8rpI8pm^N2WRf1YnrR*G!dP:^K1&]NTrR*G!dP:^K
1&]NTrR*G!dP:^K1&]NTrR!=tcS,7C2&-#:5lK21s4M)ci._3qVuQA8s8VrEs7?91s*sqF_']-/1&]NT
rR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^J2u_m+rpI8p
m^N2`\,Pg)ro91?dPUpN1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&Vm91&]NTrR*G!
dP:^K1&]NTrR*G"_(=(8oDco3J,R8LrO*(3dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&]NTrR*V'ifX6.\,Pg)rpI8pm^N2`\,Pg)rnrV2dkgsN1&]NTrR*G!dP:^K
1&]NTrR*G!dP:^K1&]NTrR*G!dMjq>dP:^K1&]NTrR*G!dP:^K1&]NTrNlh0aACIfoDcu5J)$%^XT8=0
%/nU/rR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!d5:j\L]6_N
rpI8pm^N2`\,Pg)rpI8pm^N2`\,P35rR*J"dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K0d-GC1&]NT
rR*G!dP:^K1&]NTrR*G!dP:^/$2pt+s5Tg+s7?98s*sUhrN?;$XT8=2&,jp2rR*G!dP:^K1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G"h1#@k\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rn;MndP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP3*IdP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^1
%/m:.rN?A(pYjp-oDd/:J,B2P')ep4rN-(u]b::l1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&fpKrpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rn2&bdP:^K
1&]NTrR*G!dP:^K1&]NTr@$)KrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!\ISS?!<'#"rO<g%s7?9;
s*r!UrN-(uXT8=%!<'YIrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NT
rn(ram^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,FlbrR*G!dP:^K1&]NTrR*G!
dP3<OdP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&\`trN-(uXT8=%!<:2ChuE<Je,OpSPPqT`rN-(u
XT8=%!<'_OrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&][0rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rRG!JdP:^K1&]NTrR*DUrR*G!dP:^K
1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&\g#rN-(uXT8=%!<'#"s5^-<s7?9As*s[nrN65#XT8=%!<'#"
rN-(u`#\g)1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR=jHm^N2`\,Pg)rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2_[JeTNrR*G!dP3`[dP:^K1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!^_m$P!<'#"rN-(uXT8='"onAZjo=rPf`-I"rO!C=XT8=%!<'#"
rN-(uXT8=?+oThDrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR=R@mBll\\,Pg)rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rp6ogdRa<tdP:^K1&]NTrR*G!
dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^<*;uu>rN-(uXT8=%!<'#"rO<s2s7?9Ds*r'\rN-(uXT8=%
!<'#"rN-(uXT8=B-N2@IrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]Qkrp6lgm^N2`\,Pg)
rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8plE*8KdR*o\1&]NT
rR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^?+T8DBrN-(uXT8=%!<'#"rN-)"b['H4oDdVGJ)Han
XT8=%!<'#"rN-(uXT8=%!<'#"rQZnkdP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrR+%3l`:$Q
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`[m^5`
\,PWirR*q/dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrQ-AaXT8=%!<'#"rN-(uXT8=%!<'#"
s5pEKs7?9Js*s^urN?>%XT8=%!<'#"rN-(uXT8=%!<'#"rQm7sdP:^K1&]NTrR*G!dP:^K1&]NTrR*G!
dP:^K1&]N`rog6Ym^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^Ggfm^N2`\,Pg)ro]sQdQ7?T1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]NTrQQhjXT8=%
!<'#"rN-(uXT8=%!<'#"rN?G*q<@>IoDdbKJ,QhmrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rR*G!dP:^K
1&]NTrR*G!dP:^K1&]NTrR*G!dP:^L3WA35rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)
rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pmRt%gm^N2`\,Pg)rpI8pjI#nn2uV/ZrR*G!dP:^K1&]NT
rR*G!dP:^K1&]NTrQm1qXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u\g$SBoDdhMJ&kIbXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXoSFK1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&]KYroKLGm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`[o!(l\,Pg)rpI8pm^N2`
\,Pg)ro0%<dPh'P1&]NTrR*G!dP:^K1&]NTrR*G!dP:^K1&\3SrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
s3G3Fs7?9Ps*s%$rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXoSFK1&]NTrR*G!dP:^K1&]NTrR*G!
dP:^K2?)TqrpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^H6rm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8phhV0X2#YiWrR*G!dP:^K1&]NTrR*G!dP:^K
1&\6TrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN6/#kHjg\oDe%SJ+qq#Y6=g+!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<',&rR*G!dP:^K1&]NTrR*G!dP:^K1&]KUrnrM0m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`[p8q#\,Pg)rpI8pm^N2`\,Pg)rpI8p
m^N2`\,Pg)rnW#$dP:^K1&]NTrR*G!dP:^K1&]NTrR*G!XoSF&!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'/-s823Xs7?9Ts*t!V)uZl=rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uYQOjP1&]NTrR*G!dP:^K
1&]NTrR*G"h0].h\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)
rpI8pm^N2`\,Pg)rpF($rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,P-&rR*G!dP:^K1&]NT
rR*G!dP:^K1&\<WrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=3-MRQ3s6K]7b>nMC!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uYlt$R1&]NTrR*G!dP:^K1&]NTrnDGlm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)@fGf)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rRbf^dP:^K1&]NTrR*G!dP:^K1&\<XrN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<:J^qZ$0emf.dtVZ!UsrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'5.rR*G!dP:^K1&]NTrR*G!fOk-N\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI7/rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Fl`rR*G!dP:^K1&]NTrR*G!Ylt$-!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8Cc\GcI!s7-,=puVIX"oYP'rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'81rR*G!
dP:^K1&]NTrRY<Rm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)DuT16rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rRFmGdP:^K1&]NTrR*G!Z3C3/!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=)#ljej
s7?9]s*t!X*rW2@rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rO*(3dP:^K1&]NTrRFjG
m^E,_\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpFa7rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pmBliA
:&WKprR*G!dP:^.#Q:b)rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rOaW[oDeI_J'D3r
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'G;rR*G!dP:^M:&aOdrpI8pm^N2`
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`[rVK9
\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm'-H<8,^jj
rR*G![L2u8!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rrLSgp&FddJ**j2XT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rOWU=dP:^L7fM_XrpI8pm^N2`\,Pg)
rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`[rq]<\,Pg)
rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,P]orR+"1
dP:^1%/m:.rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u"Khb)lb3)nqYu'@l2@di
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'SErR4(3lDspP\,Pg)rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI7?rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,PTgrR*k-\e"bA!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"r<KG)rNZe1rU]pd
qu;0E\KUpR!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=;-N<5)rpI8p
m^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pf@\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`\,Pg)rpI8pm^N2`
\,Pg)rpI8pm^N2`\,PN]rP0KQXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<!/)
!<'#"rOsr^s8DtIpuh:5#P3iRo8<V?MZE@,!:u*Ko8<V?MZE@,!:u*Ko8<V?MZE@,!:u*Ko8<V?MZE@,
!;Wc;rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?
rP(&b^G,W$0`Aa?Hi:]5rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?
rP(&b^G,W$0`Aa?rP(&b^G,W$0`Aa?rP(&]WuCSf!:u*Ko8<V?MZE@,!:u*Ko8<V?MZE@,!:u*Ko8<V?
MZE@,!:u*Ko*UBUo8<VAQ4!Zjp&>!gs*st!WTnC%l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#l>-IcC]Na:!:G+4rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN1>FrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(dF9(TB!:"A#l>-IcC]Na:!:"A#l>-Ic
C]Na:!:"A#l>-IcC]Na:!:"A#l3D,*lYut'i4Agcq#>j>`IR5j!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#l>-IcC]Na:!:"A#l>-IcC]O:+!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'$C!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT80h!:"A#l>-IcC]Na:!:"A#l>-Ic
C]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]N`'D?0OYPPG1Ns*sdH=6aT%l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#l>-IcC]Na:!:"A#l>-IcC]NgH!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN1,@rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT7^0!:"A#l>-IcC]Na:!:"A#l>-Ic
C]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]O52\S:a:o)F42Rkj8F!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#l>-IcC]Na:!:"A#l>-IqTE+qm!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'$=!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!;N)bl>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-Ic
C]Na:!:"A#l>-IcC]Na:!;3-Ss7?9\s*t%Fn;/"IC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#
l>-IcC]Na:!:4n0rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT3/8XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(bEWGB@!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#nW4pms7?9Ys*sh0mX>N.C]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!;N/d
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT3&5XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!;N#`l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]NpU&-)OurVuKhm/MS6
lHeg>"6s\&l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#luW7+XT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'$0
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"l>ZghC]Na:!:"A#
l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]NjI"oe&KqZ$0el2Q82gT9^[!:"A#l>-IcC]Na:!:"A#
l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#q4@ZcXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'$*!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8-b!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#lZ*%)ik>*doDdtQJ,73=l>6OdC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IeF9)9A
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uX]GN$XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!:"M'
l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>?V!c^+5'oDdkNJ+p6Ol>-IcC]Na:!:"A#
l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IqSH/Vj!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uX\f)sXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(oQiQDf!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:
!;O0Cnc/4\i;\;uSMf\K!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na@!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#m!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT7X*!:"A#l>-IcC]Na:!:"A#
l>-IcC]Na:!:"A#l>-IcC]Na:!;33Xmf2nYhuA3*qs]I\l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-Ic
C]Na:!:"A#pmV9^XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-&irN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8*^
!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:c3tli6SVh#Dm!lgB30l>-IcC]Na:!:"A#
l>-IcC]Na:!:"A#l>-IcC]Na:!:"P(rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-&frN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN$"aD?/s<!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IhK+S(\p$;YLs4[L&rp8,#
FT^oF!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IqRK3;g!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%561Ya
!<'#"rN-(uXT8=%!<'#"rN-(nPQ9ub!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IfGm=9=i9:44
s4@:#r8"UCE<,9?!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>Qb%XT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%3<9#[!<'#"rN-(uXT8=%!<&u!l>?UeC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:+\,rT(fV
s7?9?s*smeL[&^Vl>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]O3s!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN.jUrN-(uXT8=%!<'#"oo]=?C]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!:"G%qpLnls7?9<
s*sdK?0Z5+l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcDufj=!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN.XOrN-(uXT8=$!:"G%l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]O7DE8U]es3CXoo:@o+C]Na:
!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!;Df[rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%-NO+I!;)BR
l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IcC]O1-8DO7:s31LmrU>abl>-IcC]Na:!:"A#l>-IcC]Na:
!:"A#l>-IcD?0X:!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u,-1e0C]Na:!:"A#l>-IcC]Na:!:"A#
l>-IcC]Na:!:l@$g&L[Db5ZtdmI#H3l>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IoPQ:Za!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"oT&tpl>-IcC]Na:!:"A#l>-IcC]Na:!:"A#l>-IhKG"7^p"BB:s2b4irpA5%
Fp.)H!:"A#l>-IcC]Na:!:"A#l>-IcC]Na<!<&u!rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"r2Th_C]Na:)Z]/>
!:"A#l>-IcC]Na:!:"A#l>-IfH3XB?iR\&#s2G"fr8"^FE<5?@!:"A#l>-IcC]Na:!:"A#l>-IcC]O-k
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!:u-Ll>-IcC]Na:'`dN8!:"A#l>-IcC]Na:!:+\,rT1rGs7?9-s*smf
MX#$Yl>-IcC]Na:!:"A#l>-IcC]Na:!:"G%rN$"tXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!;rktl>-IcC]Na:!:"A#l>-t2
l>-IcC]Na:!:"J&qpV.`s7?9*s*sdN@-VP.l>-IcC]Na:!:"A#l>-IcC]Na:!;)BRrN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT7sN!:"A#l>-IcC]Na:!:"A#l>-b,l>-IcC]O:GFNsjWs1JA]oUn81C]Na:!:"A#l>-IcC]Na:!:"A#
l>-J!X8r4$!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8:!!:"A#l>-IcC]Na:!:"A#l>-IcC]Na:!s&%o9$72*s185ZrUGjfl>-IcC]Na:
!:"A#l>-IcC]Na:!;)<PrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"nqdA3C]Na:!:"A#l>-IcC]Na:!:"A#ns(WDs7?9#s*XY2mXGZ1
C]Na:!:"A#l>-IcC]Na:!:"A#r2]nsXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!;rhsl>-IcC]Na:!:"A#l>-IcC]Na:!:PUTs8;W3s7?9!s*+J0
f'IS`l>-IcC]Na:!:"A#l>-IcC]O'c!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(iL&gLT!:"A#l>-IcC]Na:!:"A#m<]*;oAddhoDc/sEW"\$
lYusjC]Na:!:"A#l>-IcC]Na:!;rktrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"ql'S\C]Na:!:"A#l>-IcC]Na:!:+\-rT;,9s7?8ps(hJTO6UQ^l>-Ic
C]Na:!:"A#l>-IlMZE^X!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT7mE!:"A#l>-IcC]Na:!:"A#l>H\"etKhXoDbrmAb``Fl>-IcC]Na:!:"A#l>-IcC]OC5
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(sVZ?!u!:"A#
l>-IcC]Na:!:"D$q8%<fs7?8js'PDm4mHh`l>-IcC]Na:!:"A#nqdAFXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!:YU@l>-IcC]Na:!:"A#l>-IoX%g,(oDbch>5duO
+6mYBl>-IcC]Na:!:"A#r2KbqXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"
rN-(sVZ?!u!:"A#l>-IcC]Na:!:lC)[K#juVZ0cona:r;l>-IcC]Na:!:"A#nV.&BXT8=%!<'#"rN-(u
XT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(gJH4tO!:"A#l>-IcC]NpY'`\1.[K#juV#OBm
n(?uN"mTn(l>-IcC]Na:!;i_qrN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT83p
!:"A#l>-IcC]Na:!:>+=rq5BYs7?8as%WFL\Ee/9l>-IcC]Na:!:b^BrN-(uXT8=%!<'#"rN-(uXT8=%
!<'#"rN-(uXT8=%!<'#"rN-(uXT7g=!:"A#l>-IcC]NgD!r_<'YQ+4oT)V=WcB@I1!:"A#l>-IcC]O@1
!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!;`Mll>-IcC]Na:!:"J&qq%XFs7?8[s$?Fi
B'O14l>-IcC]NsW!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!:G78l>-IcC]Na;!;XNY
WW2SiR/]8?UHe$[!:"A#l>-ItVZ?[t!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"qP4,VC]Na:!:"A#
p8q2hs7?8Us#'>.+mNkDl>-IhJH5YN!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!<'#"mWnluC]Na:!:lI-
U]9rcPlET;oC%8@l>-IcC]O=/!<'#"rN-(uXT8=%!<'#"rN-(uXT8=%!;WAil>-IcC]Ns[('":/U]9rc
P5d37nD*DU"mTn(msY98XT8=%!<'#"rN-(uXT8=%!<'#"rN-(eGl[,G!:>.?s7YWKs7?8Os!dp+]^'P<
l>-IsV#^Ir!<'#"rN-(uXT8=%!<'#"q4[lSC]NgD!r_?+ScA<]N;k."d$<m6!:G78rN-(uXT8=%!<'#"
rN-(uXT7^3!:"J&r7Is:s7?8IruLmHC?fU8qP4,iXT8=%!<'#"rN-(pTE+7o!;XQ]QiH[WLAr(_UdFKq
!<'#"rN-(uXT8=%!:4h.pT@GZs7?8Crt4d`,5Iu6rN-(uXT8-g!:uU3OoP%QK)ZDZoC@qUrN-(uXT7mR
)ZTg6OoP%QJc?/YrpekAWseg)&c_RhNrS_NJcGZJ"R3]$m`pajoDa=
~> %APLeod
EI
ep
end
%%Trailer
%%EOF
